from tkinter import messagebox
from tkinter import simpledialog

import time

# Sistema de casa de cambio Express Exchange


# Declaracion de variables

solicito = int
numero_empleado = int
dolares = float
quiere = float
pago = float
pesos = float
cambio = float
quedar = float
cantidad = float
programa = int
fecha = str
compra_tdc = 1
venta_tdc = 0
dolares_caja = float
pesos_caja = float
movimiento = 0
hora = str
controlador = 0
ganancias = 0
dar = float
pedir = float
menu_bit = True
i = 0
totales = 0
compras = 0
ventas = 0
promedio = 0
suma_ventas = 0
p_ventas = 0
p_compras = 0
movimiento_dolares = 0
movimiento_pesos = 0
menu_efectivo = 0
retirar = 0
dolares_retiro = 0
pesos_retiro = 0

# Listas
v_numero_movimiento = []
v_numero_empleado = []
v_fecha = []
v_hora = []
v_tipo_movimiento = []
v_compra_tdc = []
v_venta_tdc = []
v_cantidad_dolares = []
v_dolares_caja = []
v_pesos_caja = []

# Inicio


bandera = True
while bandera:
    try:
        programa: int = simpledialog.askinteger("Inicio", "\n¿Deseas utilizar el sistema?\n\n1]Sí\n2]No\n")
        if programa == 1:
            fecha = time.strftime("%d/%m/%Y")
            hora = time.strftime("%H:%M:%S")
            bandera = True
            v_fecha.append(fecha)
            v_hora.append(hora)

            while bandera:
                try:
                    numero_empleado: int = simpledialog.askinteger("Datos", "\nIntroduce el numero de empleado: \n")
                    bandera = False

                    if numero_empleado <= 0:
                        bandera = True
                        messagebox.showinfo("Datos", "\n*Captura un numero de empleado valido*\n")
                except ValueError:
                    messagebox.showinfo("Datos", "\n*Captura un numero de empleado valido*\n")

            while compra_tdc > venta_tdc or compra_tdc == venta_tdc:
                bandera = True
                while bandera:
                    try:
                        compra_tdc: float = simpledialog.askfloat("Datos",
                                                                  "\nIntroduce el tipo de cambio de Compra: \n")
                        bandera = False

                        if compra_tdc <= 0:
                            bandera = True
                            messagebox.showinfo("Datos", "\n*Captura un monto valido*\n")
                    except ValueError:
                        messagebox.showinfo("Datos", "\n*Captura un tipo de cambio valido*\n")

                bandera = True
                while bandera:
                    try:
                        venta_tdc: float = simpledialog.askfloat("Datos", "\nIntroduce el tipo de cambio de Venta: \n")
                        bandera = False

                        if venta_tdc <= 0:
                            bandera = True
                            messagebox.showinfo("Datos", "\n*Captura un monto valido*\n")

                    except ValueError:
                        messagebox.showinfo("Datos", "\n*Captura un tipo de cambio valido*\n")

                if compra_tdc > venta_tdc:
                    messagebox.showinfo("Datos", "\n*El valor de compra debe ser menor que el de venta*\n")
                elif compra_tdc == venta_tdc:
                    messagebox.showinfo("Datos", "\n*El valor de venta debe ser mayor que el de compra\n*")

            bandera = True
            while bandera:
                try:
                    dolares_caja: float = simpledialog.askfloat("Datos",
                                                                "\nIntroduce la cantidad de Dolares en caja: \n")
                    bandera = False

                    if dolares_caja <= 0:
                        bandera = True
                        messagebox.showinfo("Datos", "\n*Captura un monto valido*\n")
                except ValueError:
                    messagebox.showinfo("Datos", "\n*Captura un monto valido*\n")

            bandera = True
            while bandera:
                try:
                    pesos_caja: float = simpledialog.askfloat("Datos", "\nIntroduce la cantidad de Pesos en caja: \n")
                    bandera = False

                    if pesos_caja <= 0:
                        bandera = True
                        messagebox.showinfo("Datos", "\n*Captura un monto valido*\n")

                except ValueError:
                    messagebox.showinfo("Datos", "\n*Captura un monto valido*\n")

        elif programa == 2:
            messagebox.showinfo("Datos", "\nVuelva pronto\n")
            exit()
        else:
            messagebox.showinfo("Datos", "\n*Introduce una opcion valida*\n")

    except ValueError:
        messagebox.showinfo("Datos", "\n*Captura una opcion valida*\n")

        v_numero_empleado.append(numero_empleado)
        v_compra_tdc.append(compra_tdc)
        v_venta_tdc.append(venta_tdc)
        v_dolares_caja.append(dolares_caja)
        v_pesos_caja.append(pesos_caja)
        v_numero_movimiento.append(movimiento)
        v_tipo_movimiento.append("\nInicio de operaciones\n")
        v_cantidad_dolares.append("\nInicio de operaciones\n")
        movimiento += 1


# Metodos


def compra():
    global pesos, cambio, dolares_caja, pesos_caja, compra_tdc, quedar, cantidad, movimiento, bandera, controlador, pago, quiere, solicito, compras, ventas, totales, suma_ventas, v_tipo_movimiento, p_ventas, p_compras, ganancias, fecha

    solicito = 0
    while solicito != 1 and solicito != 2:

        bandera = True
        while bandera:
            try:
                solicito = simpledialog.askinteger("Compra",
                                                   "\nQue solicito el cliente?\n1]Cantidad de dolares a pesos\n2]Pesos exactos\n")
                bandera = False

            except ValueError:
                messagebox.showinfo("Compra", "\nCaptura una opcion valida\n")

        if solicito != 1 and solicito != 2:
            messagebox.showinfo("Compra", "\nIntroduce una opcion valida\n")

    if solicito == 1:
        quiere = pesos_caja + 1
        while quiere > pesos_caja:
            bandera = True
            while bandera:
                try:
                    quiere = simpledialog.askfloat("Compra", "\nCuantos dolares a pesos quiere?\n")
                    bandera = False
                except ValueError:
                    messagebox.showinfo("Compra", "\nCaptura una cantidad valida\n")

            if quiere > pesos_caja:
                messagebox.showinfo("Compra", "\n*No hay fondos suficientes, introduzca otra cantidad*\n")

        bandera = True
        while bandera:
            try:
                pago = simpledialog.askfloat("Compra", "\nCantidad de dolares a recibir?\n")
                bandera = False
            except ValueError:
                messagebox.showinfo("Compra", "\nCaptura una cantidad valida\n")

        pesos = quiere * compra_tdc
        cambio = pago - (pesos / compra_tdc)
        dolares_caja += quiere
        pesos_caja -= pesos

        messagebox.showinfo("Compra", f"\nPesos a entregar: {pesos}\nCambio: {cambio}\n")

    elif solicito == 2:
        quiere = pesos_caja + 1
        while quiere > pesos_caja:
            bandera = True
            while bandera:
                try:
                    quiere = simpledialog.askfloat("Compra", "\nCuantos pesos quiere?\n")
                    bandera = False
                except ValueError:
                    messagebox.showinfo("Compra", "\nCaptura una cantidad valida\n")

            if quiere > pesos_caja:
                messagebox.showinfo("Compra", "\n*No hay fondos suficientes, introduzca otra cantidad*\n")

        pago = simpledialog.askfloat("Compra", "\nCantidad de dolares a recibir?\n")
        quedar = pago * compra_tdc
        cambio = (quedar - quiere) / compra_tdc
        dolares_caja += pago - cambio
        pesos_caja -= quiere
        messagebox.showinfo("Compra", f"\nPesos a entregar: {quiere}\nCambio: {cambio}\n")

    if solicito == 1:
        cantidad = quiere
    elif solicito == 2:
        cantidad = pago - cambio

    controlador = 1
    registrar_bitacora()


def venta():
    global quiere, pago, pesos, cambio, dolares_caja, pesos_caja, venta_tdc, cantidad, movimiento, dolares, bandera, quedar, controlador, ganancias, solicito, compras, ventas, totales, suma_ventas, v_tipo_movimiento, p_ventas, p_compras, ganancias, fecha

    solicito = 0
    while solicito != 1 and solicito != 2:

        bandera = True
        while bandera:
            try:
                solicito = simpledialog.askinteger("Venta",
                                                   "\nQue solicito el cliente?\n1]Cantidad de pesos a dolares\n2]Dolares exactos\n")
                bandera = False
            except ValueError:
                messagebox.showinfo("Venta", "\nCaptura una opcion valida\n")

        if solicito != 1 and solicito != 2:
            messagebox.showinfo("Venta", "\nIntroduce una opcion valida\n")

    if solicito == 1:
        quiere = dolares_caja + 1
        while quiere > dolares_caja:

            bandera = True
            while bandera:
                try:
                    quiere = simpledialog.askfloat("Venta", "\nCuantos pesos a dolares quiere?\n")
                    bandera = False

                except ValueError:
                    messagebox.showinfo("Venta", "\nCaptura una cantidad valida\n")

            if quiere > dolares_caja:
                messagebox.showinfo("Venta", "\n*No hay fondos suficientes, introduzca otra cantidad*\n")
        bandera = True
        while bandera:
            try:
                pago = simpledialog.askfloat("Venta", "\nCantidad de pesos a recibir?\n")
                bandera = False
            except ValueError:
                messagebox.showinfo("Venta", "\nCaptura una cantidad valida\n")

        dolares = quiere / venta_tdc
        cambio = pago - (dolares * venta_tdc)

        messagebox.showinfo("Venta", f"\nDolares a entregar: {dolares}\nCambio: {cambio}\n")

        dolares_caja -= dolares
        pesos_caja += quiere

    elif solicito == 2:
        quiere = dolares_caja + 1
        while quiere > dolares_caja:
            bandera = True
            while bandera:
                try:
                    quiere = simpledialog.askfloat("Venta", "\nCuantos dolares quiere?\n")
                    bandera = False
                except ValueError:
                    messagebox.showinfo("Venta", "\nCaptura una cantidad valida\n")

            if quiere > dolares_caja:
                messagebox.showinfo("Venta", "\n*No hay fondos suficientes, introduzca otra cantidad*\n")

        bandera = True
        while bandera:
            try:
                pago = simpledialog.askfloat("Venta", "\nCantidad de pesos a recibir?\n")
                bandera = False
            except ValueError:
                messagebox.showinfo("Venta", "\nCaptura una cantidad valida\n")

        quedar = pago / venta_tdc
        cambio = pago - (quiere * venta_tdc)

        messagebox.showinfo("Venta", f"\nDolares a entregar: {quiere}\nCambio: {cambio}\n")

        dolares_caja -= quiere
        pesos_caja += (quiere * venta_tdc)

    else:
        messagebox.showinfo("Venta", "\nCaptura una opcion valida\n")

    if solicito == 1:
        ganancias += dolares
        cantidad = dolares
    elif solicito == 2:
        ganancias += quiere
        cantidad = quiere

    controlador = 2
    registrar_bitacora()


def consultar_efectivo():
    global dolares_caja, pesos_caja, movimiento

    messagebox.showinfo("Consultar efectivo", f"\nEfectivo en caja\nDolares: ${dolares_caja}\nPesos: ${pesos_caja}\n")


def actualizar_tc():
    global compra_tdc, venta_tdc, bandera, movimiento
    compra_tdc = 1
    venta_tdc = 0
    while compra_tdc > venta_tdc or compra_tdc == venta_tdc:
        bandera = True
        while bandera:
            try:
                compra_tdc = simpledialog.askfloat("Actualizar tipo de cambio",
                                                   "\nIntroduce el tipo de cambio de Compra: \n")
                bandera = False
                if compra_tdc <= 0:
                    bandera = True
                    messagebox.showinfo("Actualizar tipo de cambio", "\n*Captura un monto valido*\n")
            except ValueError:
                messagebox.showinfo("Actualizar tipo de cambio", "\n*Captura un tipo de cambio valido*\n")

        bandera = True
        while bandera:
            try:
                venta_tdc = simpledialog.askfloat("Actualizar tipo de cambio",
                                                  "\nIntroduce el tipo de cambio de Venta: \n")
                bandera = False
                if venta_tdc <= 0:
                    bandera = True
                    messagebox.showinfo("Actualizar tipo de cambio", "\n*Captura un monto valido*\n")
            except ValueError:
                messagebox.showinfo("Actualizar tipo de cambio", "\n*Captura un tipo de cambio valido*\n")
        if compra_tdc > venta_tdc:
            messagebox.showinfo("Actualizar tipo de cambio", "\n*El valor de compra debe ser menor que el de venta*\n")
        elif compra_tdc == venta_tdc:
            messagebox.showinfo("Actualizar tipo de cambio", "\n*El valor de venta debe ser mayor que el de compra*\n")


def actualizar_no_emp():
    global numero_empleado, bandera, movimiento
    bandera = True
    while bandera:
        try:
            numero_empleado = simpledialog.askinteger("Numero de empleado", "\nIntroduce el numero de empleado: \n")
            bandera = False
            if numero_empleado <= 0:
                bandera = True
                messagebox.showinfo("Actualizar numero de empleado", "\n*Captura un numero de empleado valido*\n")
        except ValueError:
            messagebox.showinfo("Actualizar numero de empleado", "\n*Captura un numero de empleado valido*\n")


def agregar_efectivo_caja():
    global dolares_caja, pesos_caja, bandera, movimiento
    bandera = True
    while bandera:
        try:
            dolares_caja += simpledialog.askfloat("Agregar efectivo a caja",
                                                  "\nCantidad de dolares a agregar a caja: \n")
            bandera = False
        except ValueError:
            messagebox.showinfo("Venta", "\nCaptura una cantidad valida\n")

    bandera = True
    while bandera:
        try:
            pesos_caja += simpledialog.askfloat("Agregar efectivo a caja", "\nCantidad de pesos a agregar a caja: \n")
            bandera = False
        except ValueError:
            messagebox.showinfo("Venta", "\nCaptura una cantidad valida\n")


def bitacora():
    global movimiento, numero_empleado, fecha, hora, compra_tdc, venta_tdc, dolares_caja, pesos_caja, v_numero_movimiento, v_numero_empleado, v_fecha, v_hora, v_tipo_movimiento, v_compra_tdc, v_venta_tdc, v_cantidad_dolares, v_dolares_caja, v_pesos_caja, i, menu_bit, bandera

    menu_bit = True
    while menu_bit:
        bandera = True
        while bandera:
            try:
                menu_bit = simpledialog.askinteger("Bitacora",
                                                   f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\nMenu Bitacora\n1]Inicio de operaciones\n2]Primer movimiento\n3]Ultimo movimiento\n4]Todos los movimientos\n5]Numero de transacciones\n6]Regresar\n")
                bandera = False
            except ValueError:
                messagebox.showinfo("Bitacora", "\n*Captura una opcion valida*\n")
        if menu_bit == 1:
            i = 0
            messagebox.showinfo(
                "Bitacora",
                f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\nBitacora\nNumero de movimiento: {v_numero_movimiento[i]}\nNumero de empleado: {v_numero_empleado[i]}\nFecha: {v_fecha[i]}\nHora: {v_hora[i]}\nTipo de movimiento: {v_tipo_movimiento[i]}\nTipo de cambio de compra: {v_compra_tdc[i]}\nTipo de cambio de venta: {v_venta_tdc[i]}\nCantidad del movimiento en dolar: {v_cantidad_dolares[i]}\nDolares en caja: {v_dolares_caja[i]}\nPesos en caja: {v_pesos_caja[i]}\n")
            menu_bit = True
        elif menu_bit == 2:
            i = 1
            messagebox.showinfo(
                "Bitacora",
                f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\nBitacora\nNumero de movimiento: {v_numero_movimiento[i]}\nNumero de empleado: {v_numero_empleado[i]}\nFecha: {v_fecha[i]}\nHora: {v_hora[i]}\nTipo de movimiento: {v_tipo_movimiento[i]}\nTipo de cambio de compra: {v_compra_tdc[i]}\nTipo de cambio de venta: {v_venta_tdc[i]}\nCantidad del movimiento en dolar: {v_cantidad_dolares[i]}\nDolares en caja: {v_dolares_caja[i]}\nPesos en caja: {v_pesos_caja[i]}\n")
            menu_bit = True
        elif menu_bit == 3:
            i = (movimiento - 1)
            messagebox.showinfo(
                "Bitacora",
                f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\nBitacora\nNumero de movimiento: {v_numero_movimiento[i]}\nNumero de empleado: {v_numero_empleado[i]}\nFecha: {v_fecha[i]}\nHora: {v_hora[i]}\nTipo de movimiento: {v_tipo_movimiento[i]}\nTipo de cambio de compra: {v_compra_tdc[i]}\nTipo de cambio de venta: {v_venta_tdc[i]}\nCantidad del movimiento en dolar: {v_cantidad_dolares[i]}\nDolares en caja: {v_dolares_caja[i]}\nPesos en caja: {v_pesos_caja[i]}\n")
            menu_bit = True
        elif menu_bit == 4:
            for i in range(movimiento):
                messagebox.showinfo(
                    "Bitacora",
                    f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\nBitacora\nNumero de movimiento: {v_numero_movimiento[i]}\nNumero de empleado: {v_numero_empleado[i]}\nFecha: {v_fecha[i]}\nHora: {v_hora[i]}\nTipo de movimiento: {v_tipo_movimiento[i]}\nTipo de cambio de compra: {v_compra_tdc[i]}\nTipo de cambio de venta: {v_venta_tdc[i]}\nCantidad del movimiento en dolar: {v_cantidad_dolares[i]}\nDolares en caja: {v_dolares_caja[i]}\nPesos en caja: {v_pesos_caja[i]}\n")
            menu_bit = True
        elif menu_bit == 5:
            messagebox.showinfo("Bitacora", f"\nNumero de transacciones sin inicio de operaciones: {movimiento - 1}\n")
            menu_bit = True
        elif menu_bit == 6:
            menu_bit = False
            messagebox.showinfo("Bitacora", "\nRegresando al menu de operaciones\n")
        else:
            messagebox.showinfo("Bitacora", "\nIntroduce una opcion valida\n")


def registrar_bitacora():
    global movimiento, numero_empleado, fecha, hora, compra_tdc, venta_tdc, dolares_caja, pesos_caja, v_numero_movimiento, v_numero_empleado, v_fecha, v_hora, v_tipo_movimiento, v_compra_tdc, v_venta_tdc, v_cantidad_dolares, v_dolares_caja, v_pesos_caja, cantidad, dolares_retiro, pesos_retiro

    v_numero_movimiento.append(movimiento)
    v_numero_empleado.append(numero_empleado)
    fecha = time.strftime("%d/%m/%Y")
    hora = time.strftime("%H:%M:%S")
    v_fecha.append(fecha)
    v_hora.append(hora)

    if controlador == 1:
        v_tipo_movimiento.append("Venta")
    elif controlador == 2:
        v_tipo_movimiento.append("Compra")
    if controlador == 3:
        v_tipo_movimiento.append("Retiro de efectivo")

    v_compra_tdc.append(compra_tdc)
    v_venta_tdc.append(venta_tdc)

    if controlador == 3:
        v_cantidad_dolares.append(f"\nDolares: {dolares_retiro}\nPesos: {pesos_retiro}\n")
    else:
        v_cantidad_dolares.append(cantidad)

    v_dolares_caja.append(dolares_caja)
    v_pesos_caja.append(pesos_caja)

    movimiento += 1


def reporte_ventas():
    global compras, ventas, totales, suma_ventas, v_tipo_movimiento, p_ventas, p_compras, ganancias, fecha, movimiento
    # Proceso
    compras = 0
    ventas = 0
    totales = 0
    suma_ventas = 0

    compras = v_tipo_movimiento.count("Compra")
    ventas = v_tipo_movimiento.count("Venta")
    totales = compras + ventas

    if ventas > 0:
        p_ventas = (ventas * 100) / totales
    else:
        p_ventas = "No hubo movimientos"
    if compras > 0:

        p_compras = (compras * 100) / totales

    else:
        p_compras = "No hubo movimientos"

    # Print
    messagebox.showinfo(
        "Reporte de ventas",
        f"\nReporte de ventas\nFecha: {fecha}\nGanancias: ${ganancias} mx\nCantidad de movimientos sin inicio de operaciones: {movimiento - 1}\nPorcentaje de ventas: {round(p_ventas)}%\nPorcentaje de compras: {round(p_compras)}%\n")


def retirarefectivo():
    global dolares_caja, pesos_caja, movimiento, menu_efectivo, movimiento_dolares, movimiento_pesos, retirar, controlador, dolares_retiro, pesos_retiro, bandera

    menu_efectivo = 0
    controlador = 3

    while menu_efectivo != 1 and menu_efectivo != 2 and menu_efectivo != 3 and menu_efectivo != 4:
        bandera = True
        while bandera:
            try:
                menu_efectivo = simpledialog.askinteger("Retiro de efectivo",
                                                        "\nMenu Retiro de efectivo\n\n1]Retirar todo el efectivo\n2]Retirar cantidad de dolares\n3]Retirar cantidad de pesos\n4]Regresar\n")
                bandera = False
            except ValueError:
                messagebox.showinfo("Retiro de efectivo", "\nCaptura una opcion valida\n")

    movimiento_dolares = dolares_caja
    movimiento_pesos = pesos_caja

    if menu_efectivo == 1:

        dolares_caja = 0
        pesos_caja = 0

        dolares_retiro = movimiento_dolares
        pesos_retiro = movimiento_pesos

        messagebox.showinfo("Retiro de efectivo",
                            f"\nRetiraste ${movimiento_dolares} dolares y ${movimiento_pesos} pesos.\n")

    elif menu_efectivo == 2:

        retirar = dolares_caja + 1

        while retirar > dolares_caja:
            bandera = True
            while bandera:
                try:
                    retirar = simpledialog.askfloat("Retiro de efectivo", "\nCuanto deseas retirar?\n")
                    bandera = False
                except ValueError:
                    messagebox.showinfo("Retiro de efectivo", "\nCaptura una opcion valida\n")

            if retirar > dolares_caja:
                messagebox.showinfo("Retiro de efectivo", "\nNo hay suficiente efectivo\n")

        if retirar <= dolares_caja:

            dolares_caja -= retirar

            dolares_retiro = retirar
            pesos_retiro = 0

            messagebox.showinfo("Retiro de efectivo", f"\nHaz retirado ${retirar} dolares.\n")

        else:
            messagebox.showinfo("Retiro de efectivo", "\nNo hay suficiente efectivo en caja\n")

    elif menu_efectivo == 3:

        retirar = pesos_caja + 1

        while retirar > pesos_caja:
            bandera = True
            while bandera:
                try:
                    retirar = simpledialog.askfloat("Retiro de efectivo", "\nCuanto deseas retirar?\n")
                    bandera = False
                except ValueError:
                    messagebox.showinfo("Retiro de efectivo", "\nCaptura una opcion valida\n")

            if retirar > pesos_caja:
                messagebox.showinfo("Retiro de efectivo", "\nNo hay suficiente efectivo\n")

        if retirar <= pesos_caja:

            pesos_caja -= retirar
            dolares_retiro = 0
            pesos_retiro = retirar

            messagebox.showinfo("Retiro de efectivo", f"\nHaz retirado ${retirar} pesos.\n")

        else:
            messagebox.showinfo("Retiro de efectivo", "\nNo hay suficiente efectivo en caja\n")
    else:
        messagebox.showinfo("Retiro de efectivo", "\nRegresando al menu anterior\n")

    registrar_bitacora()


# Menu Principal


menu = int
while menu != 5:
    bandera = True
    while bandera:
        try:
            menu = simpledialog.askinteger("Menu Principal",
                                           f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\n//Menu//\n1]Compra\n2]Venta\n3]Actualizar tipo de cambio\n4]Más opciones\n5]Salir\n")
            bandera = False
        except ValueError:
            messagebox.showinfo("Menu", "\n*Captura una opcion valida*\n")
    if menu == 1:
        compra()
        menu = True

    elif menu == 2:
        venta()
        menu = True

    elif menu == 3:
        actualizar_tc()
        menu = True

    elif menu == 4:
        menu = True
        menu_2 = True
        while menu_2:
            bandera = True
            while bandera:
                try:
                    menu_2 = simpledialog.askinteger(
                        "Menu Operaciones",
                        f"\nExpress Exchange\n\nRFC: EJM951103H34\n\nCompra: ${compra_tdc}   Venta: ${venta_tdc}\nNumero de empleado: {numero_empleado}\n\n//Menu Operaciones//\n1]Consultar efectivo en caja\n2]Bitacora de movimientos\n3]Reporte de ventas\n4]Actualizar numero de empleado\n5]Agregar efectivo a caja\n6]Retirar efectivo\n7]Regresar al menu anterior\n")
                    bandera = False
                except ValueError:
                    messagebox.showinfo("Menu", "\n*Captura una opcion valida*\n")
            if menu_2 == 1:
                consultar_efectivo()
                menu_2 = True
            elif menu_2 == 2:
                bitacora()
                menu_2 = True
            elif menu_2 == 3:
                reporte_ventas()
                menu_2 = True
            elif menu_2 == 4:
                actualizar_no_emp()
            elif menu_2 == 5:
                agregar_efectivo_caja()
                menu_2 = True
            elif menu_2 == 6:
                retirarefectivo()
                menu = True
            elif menu_2 == 7:
                menu_2 = False
                messagebox.showinfo("Menu", "\nVolviendo al menu principal\n")
            else:
                messagebox.showinfo("Menu", "\n*Introduce una opcion valida*\n")

    elif menu == 5:
        messagebox.showinfo(
            "Menu",
            f"\nGracias por utilizar el sistema\n\nPorfavor retire el efectivo de caja:\n\nDolares: \n{dolares_caja}\n\nPesos: \n{pesos_caja}\n")
    else:
        messagebox.showinfo("Menu", "\n*Introduce una opcion valida*\n")
